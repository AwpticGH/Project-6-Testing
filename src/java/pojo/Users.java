package pojo;
// Generated Oct 10, 2022 3:35:36 PM by Hibernate Tools 4.3.1


import dao.UsersDao;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.faces.context.FacesContext;

/**
 * Users generated by hbm2java
 */
@ManagedBean
@RequestScoped
public class Users  implements java.io.Serializable {


     private Integer id;
     private String username;
     private String email;
     private String password;
     private String name;
     private Date dateOfBirth;
     private String gender;
     private String title;
     private long phoneNumber;
     private Set reservationses = new HashSet(0);
     
     UsersDao dao = new UsersDao();

    public Users() {
    }

	
    public Users(String username, String email, String password, String name, Date dateOfBirth, String gender, String title, long phoneNumber) {
        this.username = username;
        this.email = email;
        this.password = password;
        this.name = name;
        this.dateOfBirth = dateOfBirth;
        this.gender = gender;
        this.title = title;
        this.phoneNumber = phoneNumber;
    }
    public Users(String username, String email, String password, String name, Date dateOfBirth, String gender, String title, long phoneNumber, Set reservationses) {
       this.username = username;
       this.email = email;
       this.password = password;
       this.name = name;
       this.dateOfBirth = dateOfBirth;
       this.gender = gender;
       this.title = title;
       this.phoneNumber = phoneNumber;
       this.reservationses = reservationses;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    public Date getDateOfBirth() {
        return this.dateOfBirth;
    }
    
    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }
    public long getPhoneNumber() {
        return this.phoneNumber;
    }
    
    public void setPhoneNumber(long phoneNumber) {
        this.phoneNumber = phoneNumber;
    }
    public Set getReservationses() {
        return this.reservationses;
    }
    
    public void setReservationses(Set reservationses) {
        this.reservationses = reservationses;
    }

    public List<Users> getAll() {
        return dao.getAll();
    }
    
    public String getById() {
        Users user = dao.getById(id);
        this.id = user.getId();
        this.name = user.getName();
        this.username = user.getUsername();
        this.email = user.getEmail();
        this.password = user.getPassword();
        this.gender = user.getGender();
        this.title = user.getTitle();
        this.dateOfBirth = user.getDateOfBirth();
        this.phoneNumber = user.getPhoneNumber();
        
        return "./edit_users.xhtml";
    }

    public String update() throws ParseException {
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(dateOfBirth);
        Date newDate = sdf.parse(date);
        
        dateOfBirth = newDate;
        
        boolean isUpdated = dao.update(this);
        
        return isUpdated ? "../users.xhtml" : "./edit_users.xhtml";
    }
    
    public String create() throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(dateOfBirth);
        Date newDate = sdf.parse(date);
        
        dateOfBirth = newDate;
        
        boolean isCreated = dao.create(this);
        
        return isCreated ? "../users.xhtml" : "./create_users.xhtml";
    }
    
    public String delete() {
        boolean isDeleted = dao.delete(this);
        
        return isDeleted ? "../users.xhtml" : "./edit_users.xhtml";
    }

}


